<xtriples xml:base="https://id.salamanca.school/">
    <configuration>
        <vocabularies>
            <!-- Input vocabularies -->
            <vocabulary prefix="tei" uri="http://www.tei-c.org/ns/1.0"/>
            <vocabulary prefix="xi" uri="http://www.w3.org/2001/XInclude"/>
            <vocabulary prefix="sal" uri="http://salamanca.adwmainz.de"/>               

            <!-- Output vocabularies -->
            <vocabulary prefix="rdf" uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
            <vocabulary prefix="rdfs" uri="http://www.w3.org/2000/01/rdf-schema#"/>
            <vocabulary prefix="owl" uri="http://www.w3.org/2002/07/owl#"/>        

            <vocabulary prefix="void" uri="http://rdfs.org/ns/void#"/>
            <vocabulary prefix="iiif" uri="http://iiif.io/api/presentation/2.1/"/>
            <vocabulary prefix="foaf" uri="http://xmlns.com/foaf/0.1/"/>            
            <vocabulary prefix="book" uri="http://schema.org/Book/"/>               
            <vocabulary prefix="fabio" uri="http://purl.org/spar/fabio/"/>           
            <vocabulary prefix="cito" uri="http://purl.org/spar/cito/"/>            
            <vocabulary prefix="doco" uri="http://purl.org/spar/doco/"/>            
            <vocabulary prefix="po" uri="http://www.essepuntato.it/2008/12/pattern#"/> 
<!--            <vocabulary prefix="c40" uri="http://purl.org/spar/c4o"/>              -->
<!--            <vocabulary prefix="deo" uri="http://purl.org/spar/deo"/>              -->
<!--            <vocabulary prefix="co" uri="http://purl.org/co/"/>                    -->
        </vocabularies>

        <triples>

<!-- TODO/General:
    - Try to get rid of string() so that values are not isolated from their (indexed) nodes (ML suggestion by Joe Wicentowski)
    - better use union of full xpaths than or'ing predicates/conditions (intersect instead of and'ing, too?)
-->

<!-- TODO refactoring/testing: reset minimum thresholds in @repeat attributes to a higher value in order to catch all resources -->

            <statement debug="true" n="0">
                <subject type="uri"/>
                <predicate prefix="void">inDataset</predicate>
                <object type="uri" prepend="https://api.salamanca.school/v1/">void.ttl#Salamanca</object>
            </statement>
            
            <statement debug="true" n="1"><!-- a fabio:work -->
                <subject type="uri" prepend="texts/">/($currentResource//@docId)</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="fabio">work</object>
            </statement>
            <statement debug="true" n="2"><!-- fabio:hasTitle -->
                <subject type="uri" prepend="texts/">/($currentResource//@docId)</subject> <!-- /@work -->
                <predicate prefix="fabio">hasTitle</predicate>
                <object type="literal">/($currentResource//tei:titleStmt//tei:title[@type eq 'main']/text())</object>
            </statement>
            <statement debug="true" n="3"><!-- fabio:hasCreator -->
                <subject type="uri" prepend="texts/">/($currentResource//@docId)</subject>
                <predicate prefix="fabio">hasCreator</predicate>
                <object type="uri" prepend="authors.">(for $t in $currentResource//tei:titleStmt//tei:author/tei:persName/tokenize(tokenize(@ref, 'author:')[2], ' ')[1] return element t {$t})</object>
            </statement>
            <statement debug="true" n="4"><!-- fabio:has volume count -->
                <condition>/($currentResource//tei:relatedItem[@type eq "work_volume"])</condition>
                <subject type="uri" prepend="texts/">/($currentResource//@docId)</subject>
                <predicate prefix="fabio">hasVolumeCount</predicate>
                <object type="literal">/count($currentResource//tei:relatedItem[@type eq "work_volume"])</object>
            </statement>

<!-- TODO: add (from svsal-xtriples-work.xml)
    - fabio:hasPublicationYear 
    - fabio:hasShortTitle 
    - fabio:has publisher (in cerl)
    - fabio:has publisher (in gnd)
-->

            <statement debug="true" n="9"><!-- rdfs:seeAlso SvSal work webpage -->
                <subject type="uri" prepend="texts/">/($currentResource//@docId)</subject>
                <predicate prefix="rdfs">seeAlso</predicate>
                <object type="uri" prepend="https://id.c106-211.cloud.gwdg.de/texts/">/($currentResource//@docId)</object>
            </statement>

<!-- TODO: use metadata resource for volume information -->
            <statement debug="true" n="21" repeat="{/count($currentResource//sal:node[@subtype eq 'work_volume'])}">
                <subject type="uri" prepend="texts/WXXXX:">//sal:node[@subtype eq 'work_volume'][$repeatIndex]/sal:citetrail/text()</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="doco">part</object>
            </statement>
            <statement debug="true" n="22" repeat="{/count($currentResource//sal:node[@subtype eq 'work_volume'])}">
                <subject type="uri" prepend="texts/WXXXX:">//sal:node[@subtype eq 'work_volume'][$repeatIndex]/sal:citetrail/text()</subject>
                <predicate prefix="rdfs">label</predicate>
                <object type="literal">/concat('Volume ', $repeatIndex)</object>
            </statement>
            <statement debug="true" n="23" repeat="{/count($currentResource//sal:node[@subtype eq 'work_volume'])}">
                <subject type="uri" prepend="texts/WXXXX:">//sal:node[@subtype eq 'work_volume'][$repeatIndex]/sal:citetrail/text()</subject>
                <predicate prefix="po">isContainedBy</predicate>
                <object type="uri" prepend="texts/">/@work</object>
            </statement>
            <statement debug="true" n="24" repeat="{/count($currentResource//sal:node[@subtype eq 'work_volume'])}">
                <subject type="uri" prepend="texts/WXXXX:">//sal:node[@subtype eq 'work_volume'][$repeatIndex]/sal:citetrail/text()</subject>
                <predicate prefix="rdfs">seeAlso</predicate>
<!--                <object type="uri" prepend="http://www.salamanca.school/">/(.//sal:node[@subtype eq 'work_volume'][$repeatIndex]/sal:crumbtrail/a/@href)[last()]</object>-->
                <object type="uri" prepend="https://www.c106-211.cloud.gwdg.de/">//sal:node[@subtype eq 'work_volume'][$repeatIndex]/sal:crumbtrail/a/@href[last()]</object>
			 </statement>
<!-- Todo volume metadata ends here -->

<!-- TODO: add (from svsal-xtriples-work.xml)
    - frontmatter
    - backmatter
-->

            <statement debug="true" n="40" repeat="{/min((20, count($currentResource//descendant-or-self::tei:div)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="doco">/(if (($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@type eq 'book') then 'part' else if (($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@type eq 'chapter') then 'chapter' else 'section')</object>
            </statement>
            <statement debug="true" n="41" repeat="{/min((20, count($currentResource//descendant-or-self::tei:div)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">label</predicate>
                <object type="literal">/replace(($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@title/string(), '"', '\\"')</object>
            </statement>
<!-- TODO: have citableParent contain the parent's citetrail, not its xml:id (should be fixed, check it (with re-rendered texts) ) -->
            <statement debug="true" n="42" repeat="{/min((20, count($currentResource//descendant-or-self::tei:div)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="po">isContainedBy</predicate>
                <object type="uri" prepend="texts/">/string-join(($currentResource/@work, (for $t in $currentResource//descendant-or-self::tei:div[$repeatIndex]/@citableParent return $currentResource//sal:node[@n eq $t]/sal:citetrail/text())), ':')</object>
            </statement>
            <statement debug="true" n="43" repeat="{/min((20, count($currentResource//descendant-or-self::tei:div)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">seeAlso</predicate>
                <object type="uri" prepend="https://www.c106-211.cloud.gwdg.de/">/($currentResource//descendant-or-self::tei:div)[$repeatIndex]/@web</object>
            </statement>

            <statement debug="true" n="51" repeat="{/min((20, count($currentResource//tei:p)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//tei:p)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="doco">paragraph</object>
            </statement>
            <statement debug="true" n="52" repeat="{/min((20, count($currentResource//tei:p)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//tei:p)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">label</predicate>
                <object type="literal">/replace(($currentResource//tei:p)[$repeatIndex]/@title, '"', '\\"')</object>
            </statement>
<!-- TODO: have citableParent contain the parent's citetrail, not its xml:id (should be fixed, check it (with re-rendered texts) ) -->
            <statement debug="true" n="53" repeat="{/min((20, count($currentResource//tei:p)))}">
                <subject type="uri" prepend="texts/WXXXX:">//tei:p[$repeatIndex]/@citetrail</subject>
                <predicate prefix="po">isContainedBy</predicate>
                <object type="uri" prepend="texts/">/string-join(($currentResource/@work, (for $t in $currentResource//sal:node[@type eq 'p'][$repeatIndex]/sal:citableParent/text() return $currentResource//sal:node[@n eq $t]/sal:citetrail/text())), ':')</object>
            </statement>
            <statement debug="true" n="54" repeat="{/min((20, count($currentResource//tei:p)))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//tei:p)[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">seeAlso</predicate>
                <object type="uri" prepend="https://www.c106-211.cloud.gwdg.de/">/($currentResource//tei:p)[$repeatIndex]/@web</object>
	</statement>

<!-- TODO: add (from svsal-xtriples-work.xml)
    - milestones
    - lists
    - notes
-->

            <!-- Pages -->
            <statement debug="true" n="80" repeat="{/min((50, count($currentResource//tei:pb[not(@sameAs)])))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="fabio">page</object>
            </statement>
            <statement debug="true" n="81" repeat="{/min((50, count($currentResource//tei:pb[not(@sameAs)])))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">label</predicate>
                <object type="literal">/replace(normalize-space(($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@title), '"', '\\"')</object>
            </statement>
<!-- TODO: have citableParent contain the parent's citetrail, not its xml:id (should be fixed, check it (with re-rendered texts) ) -->
            <statement debug="true" n="82" repeat="{/min((50, count($currentResource//tei:pb[not(@sameAs)])))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@citetrail</subject>
                <predicate prefix="po">isContainedBy</predicate>
                <object type="uri" prepend="texts/">/concat($currentResource/@work, if(functx:substring-before-last(($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/sal:citetrail, '.')) then ':' else (), functx:substring-before-last(($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/sal:citetrail, '.'))</object>
            </statement>
<!-- TODO: fix this statement about jpg pages also -->
            <statement debug="true" n="83" repeat="{/min((50, count($currentResource//tei:pb[not(@sameAs)])))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">seeAlso</predicate>
                <object type="uri" prepend="https://facs.c106-211.cloud.gwdg.de/{/@work}/">/concat(replace(string-join(functx:get-matches(substring(($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@xml:id, 12), '[A-Z-]'), ''), '-', '/'), substring(($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@mlx:id[1], 6), '.jpg')</object>
	        </statement>
            <statement debug="true" n="84" repeat="{/min((50, count($currentResource//tei:pb[not(@sameAs)])))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdfs">seeAlso</predicate>
                <object type="uri" prepend="https://www.c106-211.cloud.gwdg.de/">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@web</object>
	        </statement>

            <!-- iiif stuff -->
            <statement debug="true" n="90" repeat="{/min((50, count($currentResource//tei:pb[not(@sameAs)])))}">
                <subject type="uri" prepend="texts/WXXXX:">/($currentResource//descendant-or-self::tei:pb[not(@sameAs)])[$repeatIndex]/@citetrail</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="iiif">canvas</object>
            </statement>


<!-- TODO: add more statements like the subsequent ones, from svsal-xtriples-work.xml (e.g. tei:cit → cito:includesQuotationFrom) -->
            <!-- SvSal authors -->
            <statement n="101" repeat="{/min((10, count($currentResource//tei:persName[contains(@ref, 'author:')][not(ancestor::tei:cit)])))}"><!-- A CitationAct event... -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-authors-', $repeatIndex)</subject>
            	<predicate prefix="rdf">type</predicate>
            	<object type="uri" prefix="cito">citationAct</object>
            </statement>
            <statement n="102" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'author:')][not(ancestor::tei:cit)])))}"><!-- ... of type... -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-authors-', $repeatIndex)</subject>
            	<predicate prefix="cito">hasCitationCharacterization</predicate>
            	<object type="uri" prefix="cito">citesAsRelated</object>
            </statement>
            <statement n="103" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'author:')][not(ancestor::tei:cit)])))}"><!-- ... what is cited? -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-authors-', $repeatIndex)</subject>
            	<predicate prefix="cito">hasCitedEntity</predicate>
            	<object type="uri" prepend="authors.">/($currentResource//tei:text//tei:persName[contains(@ref, 'author:')][not(ancestor::tei:cit)])[$repeatIndex]/tokenize(tokenize(@ref, 'author:')[2], ' ')[1]</object>
            </statement>
            <statement n="104" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'author:')][not(ancestor::tei:cit)])))}"><!-- ... where is the citation? -->
                <subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-authors-', $repeatIndex)</subject>
                <predicate prefix="cito">hasCitingEntity</predicate><!-- or po:isContainedBy? -->
                <object type="uri" prepend="texts/WXXXX:">/($currentResource//tei:text//tei:persName[contains(@ref, 'author:')][not(ancestor::tei:cit)])[$repeatIndex]/(ancestor::tei:p|ancestor::tei:div))[last()]/@citetrail</object>
             </statement>
            <!-- Cerl authors -->
            <statement n="105" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'cerl:')][not(ancestor::tei:cit)])))}"><!-- A CitationAct event... -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-cerl-', $repeatIndex)</subject>
            	<predicate prefix="rdf">type</predicate>
            	<object type="uri" prefix="cito">citationAct</object>
            </statement>
            <statement n="106" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'cerl:')][not(ancestor::tei:cit)])))}"><!-- ... of type... -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-cerl-', $repeatIndex)</subject>
            	<predicate prefix="cito">hasCitationCharacterization</predicate>
            	<object type="uri" prefix="cito">citesAsRelated</object>
            </statement>
            <statement n="107" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'cerl:')][not(ancestor::tei:cit)])))}"><!-- ... what is cited? -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-cerl-', $repeatIndex)</subject>
            	<predicate prefix="cito">hasCitedEntity</predicate>
            	<object type="uri" prepend="http://thesaurus.cerl.org/record/">/($currentResource//tei:text//tei:persName[contains(@ref, 'cerl:')][not(ancestor::tei:cit)])[$repeatIndex]/tokenize(tokenize(@ref, 'cerl:')[2], ' ')[1]</object>
            </statement>
            <statement n="108" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'cerl:')][not(ancestor::tei:cit)])))}"><!-- ... where is the citation? -->
            	<subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-cerl-', $repeatIndex)</subject>
              <predicate prefix="cito">hasCitingEntity</predicate><!-- or po:isContainedBy? -->
               <object type="uri" prepend="texts/WXXXX:">($currentResource//tei:text//tei:persName[contains(@ref, 'cerl:')][not(ancestor::tei:cit)])[$repeatIndex]/(ancestor::tei:p|ancestor::tei:div))[last()]/@citetrail)</object>
            </statement>
            <!-- GND authors -->
            <statement n="109" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'gnd:')][not(ancestor::tei:cit)])))}"><!-- A CitationAct event... -->
                <subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-gnd-', $repeatIndex)</subject>
                <predicate prefix="rdf">type</predicate>
                <object type="uri" prefix="cito">citationAct</object>
            </statement>
            <statement n="110" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'gnd:')][not(ancestor::tei:cit)])))}"><!-- ... of type... -->
               <subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-gnd-', $repeatIndex)</subject>
               <predicate prefix="cito">hasCitationCharacterization</predicate>
               <object type="uri" prefix="cito">citesAsRelated</object>
            </statement>
            <statement n="111" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'gnd:')][not(ancestor::tei:cit)])))}"><!-- ... what is cited? -->
                <subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-gnd-', $repeatIndex)</subject>
                <predicate prefix="cito">hasCitedEntity</predicate>
                <object type="uri" prepend="http://d-nb.info/gnd/">/($currentResource//tei:text//tei:persName[contains(@ref, 'gnd:')][not(ancestor::tei:cit)])[$repeatIndex]/tokenize(tokenize(@ref, 'gnd:')[2], ' ')[1]</object>
            </statement>
            <statement n="112" repeat="{/min((10, count($currentResource//tei:text//tei:persName[contains(@ref, 'gnd:')][not(ancestor::tei:cit)])))}"><!-- ... where is the citation? -->
                <subject type="bnode">/concat('CitationAct_d_', $currentResource/@xml:id, '-gnd-', $repeatIndex)</subject>
                <predicate prefix="cito">hasCitingEntity</predicate><!-- or po:isContainedBy? -->
                <object type="uri" prepend="texts/WXXXX:">($currentResource//tei:text//tei:persName[contains(@ref, 'gnd:')][not(ancestor::tei:cit)])[$repeatIndex]/(ancestor::tei:p|ancestor::tei:div))[last()]/@citetrail)</object>
            </statement>
            
            <!-- c. References to non-literary entities (places, organizations etc.): We render this with book:mentions -->
            <!-- Getty places (independently of whether or not inside a citation) -->
            <statement n="121" repeat="{/min((10, count($currentResource//tei:text//tei:placeName[contains(@ref, 'getty:')])))}">
                <subject type="uri" prepend="texts:WXXX/">/@citetrail</subject>
                <predicate prefix="book">mentions</predicate>
                <object type="uri" prepend="http://vocab.getty.edu/tgn/">/($currentResource//tei:text//tei:placeName[contains(@ref, 'getty:')])[$repeatIndex]/tokenize(tokenize(@ref, 'getty:')[2], ' ')[1]</object>
            </statement>

        </triples>
    </configuration>

    <!-- This is likely to be overwritten by createConfig.xql -->
    <collection>
        <resource uri="{//sal:index}"/>
    </collection>
</xtriples>